{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport { ShopActionTypes } from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {} catch (error) {} // collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //       const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n  //       dispatch(fetchCollectionsSuccess(collectionMap))\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/diegodinizz/Downloads/code/React/development/clothing-store/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,OAAO,UAAWC,qBAAX,GAAoC;AACzC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAIA,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf,CATwC,CAWzC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAWC,qBAAX,GAAoC;AACzC,QAAMX,SAAS,CACbM,eAAe,CAACM,uBADH,EAEbL,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions'\n\nimport { ShopActionTypes } from './shop.types'\n\nexport function * fetchCollectionsAsync () {\n  yield console.log('I am fired')\n\n  \n\n  try {\n    \n  } catch (error) {\n    \n  }\n\n  // collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //       const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n  //       dispatch(fetchCollectionsSuccess(collectionMap))\n  //     })\n  //     .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function * fetchCollectionsStart () {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  )\n}\n"]},"metadata":{},"sourceType":"module"}