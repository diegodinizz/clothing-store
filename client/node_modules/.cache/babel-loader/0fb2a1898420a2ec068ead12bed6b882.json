{"ast":null,"code":"var _jsxFileName = \"/Users/diegodinizz/Diego/projects/react/clothing-store/client/src/components/StripeCheckoutButton.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios'; // import { useHistory } from 'react-router-dom'\n// import { useDispatch } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { clearCart } from '../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({\n  price\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_51HEwahKGyWO5ehPzZiFa0nrzo4bOlYMR91wOyyI6Mdommlaf6vJeJPnoYc2rHSXSc853PcXShwiFxZCR5PfGNri80013NZ7lwW';\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Payment succesful');\n      dispatch(clearCart());\n      history.push('/');\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('There was an issue with your payment. Please sure you use the provided credit card.');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"Clothing Store\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://sendeyo.com/up/d/f3eb2117da\",\n    description: `Your total is £${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    currency: \"GBP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default withRouter(connect(null, mapDispatch)(StripeCheckoutButton));","map":{"version":3,"sources":["/Users/diegodinizz/Diego/projects/react/clothing-store/client/src/components/StripeCheckoutButton.js"],"names":["React","StripeCheckout","axios","withRouter","connect","clearCart","StripeCheckoutButton","price","priceForStripe","publishableKey","history","useHistory","dispatch","useDispatch","onToken","token","url","method","data","amount","then","response","alert","push","catch","error","console","log","JSON","parse","mapDispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,QAA0B,4BAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC1C,QAAMC,cAAc,GAAGD,KAAK,GAAG,GAA/B;AACA,QAAME,cAAc,GAClB,6GADF;AAEA,QAAMC,OAAO,GAAGC,UAAU,EAA1B;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACvBb,IAAAA,KAAK,CAAC;AACJc,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAEX,cADJ;AAEJO,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAV,MAAAA,QAAQ,CAACP,SAAS,EAAV,CAAR;AACAK,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACD,KAZH,EAaGC,KAbH,CAaSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACAH,MAAAA,KAAK,CACH,qFADG,CAAL;AAGD,KAlBH;AAmBD,GApBD;;AAsBA,sBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,qCALR;AAME,IAAA,WAAW,EAAG,kBAAiBf,KAAM,EANvC;AAOE,IAAA,MAAM,EAAEC,cAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEM,OATT;AAUE,IAAA,SAAS,EAAEL,cAVb;AAWE,IAAA,QAAQ,EAAC,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAeD,CA5CD;;AA8CA,eAAeN,UAAU,CAACC,OAAO,CAAC,IAAD,EAAO0B,WAAP,CAAP,CAA2BxB,oBAA3B,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport StripeCheckout from 'react-stripe-checkout'\nimport axios from 'axios'\n// import { useHistory } from 'react-router-dom'\n// import { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport { clearCart } from '../redux/cart/cart.actions'\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100\n  const publishableKey =\n    'pk_test_51HEwahKGyWO5ehPzZiFa0nrzo4bOlYMR91wOyyI6Mdommlaf6vJeJPnoYc2rHSXSc853PcXShwiFxZCR5PfGNri80013NZ7lwW'\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  const onToken = token => {\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    })\n      .then(response => {\n        alert('Payment succesful')\n        dispatch(clearCart())\n        history.push('/')\n      })\n      .catch(error => {\n        console.log('Payment error: ', JSON.parse(error))\n        alert(\n          'There was an issue with your payment. Please sure you use the provided credit card.'\n        )\n      })\n  }\n\n  return (\n    <StripeCheckout\n      label='Pay Now'\n      name='Clothing Store'\n      billingAddress\n      shippingAddress\n      image='https://sendeyo.com/up/d/f3eb2117da'\n      description={`Your total is £${price}`}\n      amount={priceForStripe}\n      panelLabel='Pay Now'\n      token={onToken}\n      stripeKey={publishableKey}\n      currency='GBP'\n    />\n  )\n}\n\nexport default withRouter(connect(null, mapDispatch)(StripeCheckoutButton)) \n"]},"metadata":{},"sourceType":"module"}