{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/diegodinizz/Downloads/code/React/development/clothing-store/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","googleSignInSuccess","id","data","error","googleSignInFailure","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","emailSignInSuccess","emailSignInFailure","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,aADF,EAEEC,aAFF,QAGO,gBAHP;AAKA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAWC,gBAAX,GAA+B;AACpC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPe,mBAAmB,CAAC;AAAEC,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADZ,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAACmB,mBAAmB,CAACD,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAWE,mBAAX,GAAkC;AACvC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAWa,eAAX,CAA4B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA5B,EAA8D;AACnE,MAAI;AACF,UAAM;AAAEf,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMb,OAAO,GAAG,MAAMV,IAAI,CAACM,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACP2B,kBAAkB,CAAC;AAAEX,MAAAA,EAAE,EAAEH,YAAY,CAACG,EAAnB;AAAuB,SAAGH,YAAY,CAACI,IAAb;AAA1B,KAAD,CADX,CAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMlB,GAAG,CAAC4B,kBAAkB,CAACV,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAWW,kBAAX,GAAiC;AACtC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAsCR,eAAtC,CAAhB;AACD;AAED,OAAO,UAAWS,SAAX,GAAwB;AAC7B,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA4BlB,IAAI,CAAC2B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user.types'\n\nimport {\n  signInSuccess,\n  signInFailure\n} from './user.actions'\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from '../../firebase/firebase.utils'\n\nexport function * signInWithGoogle () {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function * onGoogleSignInStart () {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function * signInWithEmail ({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    )\n  } catch (error) {\n    yield put(emailSignInFailure(error))\n  }\n}\n\nexport function * onEmailSignInStart () {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function * userSagas () {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}