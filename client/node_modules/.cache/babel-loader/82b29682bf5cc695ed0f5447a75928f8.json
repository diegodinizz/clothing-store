{"ast":null,"code":"var _jsxFileName = \"/Users/diegodinizz/Downloads/code/React/development/clothing-store/src/pages/ShopPage.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../components/CollectionsOverview';\nimport CollectionPage from './CollectionPage';\nimport { convertCollectionsSnapshotToMap, firestore } from '../firebase/firebase.utils';\nimport { updateCollections } from '../redux/shop/shop.actions';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch = {\n  updateCollections: collectionsMap => dispatch(updateCollections)\n};\nexport default ShopPage;","map":{"version":3,"sources":["/Users/diegodinizz/Downloads/code/React/development/clothing-store/src/pages/ShopPage.js"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","convertCollectionsSnapshotToMap","firestore","updateCollections","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionMap","console","log","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,4BAA3D;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAI;AACnB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACD,KAH8B,CAA/B;AAID;;AACDG,EAAAA,MAAM,GAAI;AACR,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEiB,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAElB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AAvBoC;;AA0BvC,MAAMmB,kBAAkB,GAAGC,QAAQ,GAAI;AACrCjB,EAAAA,iBAAiB,EAAEkB,cAAc,IAAID,QAAQ,CAACjB,iBAAD;AADR,CAAvC;AAIA,eAAeC,QAAf","sourcesContent":["import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport CollectionsOverview from '../components/CollectionsOverview'\nimport CollectionPage from './CollectionPage'\n\nimport { convertCollectionsSnapshotToMap, firestore } from '../firebase/firebase.utils'\nimport { updateCollections } from '../redux/shop/shop.actions'\n\nclass ShopPage extends React.Component {\n  unsubscribeFromSnapshot = null\n\n  componentDidMount () {\n    const collectionRef = firestore.collection('collections')\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot)\n      console.log(collectionMap)\n    })\n  }\n  render () {\n    const { match } = this.props\n\n    return (\n      <div>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch = ({\n  updateCollections: collectionsMap => dispatch(updateCollections)\n})\n\nexport default ShopPage\n"]},"metadata":{},"sourceType":"module"}